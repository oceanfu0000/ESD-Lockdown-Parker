# Run:
# docker compose up --build -d

# Stop:
# docker-compose down

volumes:
  rabbitmq_data:
    name: parker_rabbitmq_data
  pgdata:   
    name: kong_pgdata

networks:
  parker-net:
    driver: bridge
    name: parker-net

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: parker-rabbit
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - parker-net

  rabbitmq-sendnotification:
    build:
      context: .
      dockerfile: ./sendnotification/Dockerfile
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - parker-net

  staff:
    build:
      context: .
      dockerfile: ./staff/Dockerfile
    env_file:
      - .env
    ports:
      - "8083:8083"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  guest:
    build:
      context: .
      dockerfile: ./guest/Dockerfile
    env_file:
      - .env
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  log:
    build:
      context: .
      dockerfile: ./logs/Dockerfile
    env_file:
      - .env
    ports:
      - "8084:8084"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  error:
    build:
      context: .
      dockerfile: ./error/Dockerfile
    env_file:
      - .env
    ports:
      - "8078:8078"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  emailservice:
    build:
      context: .
      dockerfile: ./emailservice/Dockerfile
    env_file:
      - .env
    ports:
      - "8088:8088"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  stripeservice:
    build:
      context: .
      dockerfile: ./stripeservice/Dockerfile
    env_file:
      - .env
    ports:
      - "8086:8086"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  testlock:
    build:
      context: .
      dockerfile: ./testlock/Dockerfile
    env_file:
      - .env
    ports:
      - "8077:8077"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  enterpark:
    build:
      context: .
      dockerfile: ./enterpark/Dockerfile
    env_file:
      - .env
    ports:
      - "8085:8085"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  telegramservice:
    build:
      context: .
      dockerfile: ./telegramservice/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  makepayment:
    build:
      context: .
      dockerfile: ./makepayment/Dockerfile
    env_file:
      - .env
    ports:
      - "8087:8087"
    depends_on:
      - rabbitmq
    networks:
      - parker-net

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "8100:8100"
    networks:
      - parker-net

  # kong-database:
  #   image: postgres:17.4   #postgres:15-alpine   #postgres:17.4
  #   platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
  #   restart: always
  #   networks:
  #     - parker-net
  #   environment:
  #     POSTGRES_DB: kong
  #     POSTGRES_USER: kong
  #     POSTGRES_PASSWORD: password
  #   ports:      #added jn
  #     - "5432:5432"
  #   healthcheck: #added jn
  #     test: ["CMD", "pg_isready", "-U", "kong"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

  # kong-migrations:
  #   image: kong/kong-gateway:3.4   #3.9
  #   platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
  #   command: "kong migrations bootstrap"
  #   restart: on-failure
  #   depends_on:
  #     # - kong-database
  #     kong-database:
  #       condition: service_healthy

  #   networks:
  #     - parker-net
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: password


  # kong:
  #   image: kong     #/kong-gateway:3.4     
  #   platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
  #   restart: always
  #   networks:
  #     - parker-net
  #   depends_on:
  #     - kong-migrations
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: password
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #     KONG_ADMIN_GUI_URL: http://localhost:8002
  #     KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002

  #   ports:
  #     - "8000:8000"   # Kong Proxy Port
  #     - "8001:8001"   # Kong Admin API
  #     - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic.
